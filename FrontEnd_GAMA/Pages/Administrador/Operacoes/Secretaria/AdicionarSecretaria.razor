@page "/adm/dash/add/secretaria"
@using FrontEnd_GAMA.Singleton;
@using SuporteFront;
@using System.Reflection;
@inject NavigationManager navigation
@inject AdmOperationEntity ops
@inject ILocalStorageService local
@inject HttpClient http
@inject IToastService toast

@if (isAuth)
{
    <FrontEnd_GAMA.Components.Logout UserName="@Name">

    </FrontEnd_GAMA.Components.Logout>
    <FrontEnd_GAMA.Components.Component>

    </FrontEnd_GAMA.Components.Component>

<h3>Adicionar @ops.Entity</h3>
    <FrontEnd_GAMA.Components.SecretariaForm secretariaEndereco="@secretariaEndereco"> 

    </FrontEnd_GAMA.Components.SecretariaForm>
}
else
{
    <FrontEnd_GAMA.Components.SemAutorizacao>

    </FrontEnd_GAMA.Components.SemAutorizacao>
}

@code {
    public SecretariaEnderecoViewModel secretariaEndereco = new SecretariaEnderecoViewModel();
    private bool isAuth = false;
    private string Name { get; set; }

    public void Reload()
    {
        navigation.NavigateTo("/adm/dash/add/secretaria", true);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        var value = await local.GetItemAsync<string>("token");
        TokenViewModel token = new TokenViewModel();
        token.token = value;

        if (!firstRender && !string.IsNullOrEmpty(value))
            http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", value);

        if (firstRender) toast.ShowInfo("Autenticando");

        var response = await http.PostAsJsonAsync<TokenViewModel>("login/auth", token);

        if (response.StatusCode == System.Net.HttpStatusCode.OK)
        {
            if (firstRender) toast.ShowInfo("Autenticado");
            Name = await response.Content.ReadAsStringAsync();
            isAuth = true;
        }
        else isAuth = false;
        StateHasChanged();
        await base.OnAfterRenderAsync(firstRender);
    }

}