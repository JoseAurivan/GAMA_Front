@page "/adm"
@inject NavigationManager Navigation
@inject HttpClient http;
@inject ILocalStorageService localStorage;
@inject AuthenticationStateProvider auth;
@inject IToastService toast
@using FrontEnd_GAMA.ViewModels;


<h3>Login para Painel de Controle da Administração</h3>
<EditForm Model="@adminViewModel" OnSubmit="Logar">
    <div class="form-goup">
        <label for="cpf" class="sr-only">Login</label>
        <InputText id="cpf" class="form-control" @bind-Value="adminViewModel.login" placeholder="00000000000 - Apenas numeros" required />
    </div>
    <div class="form-group">
        <label for="password" class="sr-only">PASSWORD:</label>
        <InputText type="password" class="form-control" id="password" @bind-Value="adminViewModel.password" required></InputText>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Efetuar Login</button>
        <button type="reset" class="btn btn-outline-primary">Limpar</button>
    </div>

</EditForm>



@code {
    private AdminViewModel adminViewModel = new AdminViewModel();
    [CascadingParameter] public IModalService ModalService { get; set; }

    public async Task Logar()
    {
        toast.ShowInfo("Autenticando");
        if (adminViewModel.ComparePasswordAndLogin())
        {
            var response = await http.GetAsync("login/adm");
            if (response.IsSuccessStatusCode)
            {
                toast.ShowSuccess("Autenticado");
                var token = await response.Content.ReadAsStringAsync();
                await localStorage.SetItemAsync("token", token);
                http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
                Navigation.NavigateTo("/adm/dash");
            }
        }
        else
        {
            toast.ShowError("Dados incorretos");
            ModalService.Show<FrontEnd_GAMA.Components.ErrorDialog>("Dados Incorretos");
        }
    }
}
