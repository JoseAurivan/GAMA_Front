@page "/login/servidor"
@using Core.Entities
@using SuporteFront;
@inject NavigationManager NavigationManager
@inject HttpClient http;
@inject ILocalStorageService localStorage;
@inject IToastService toast;
<h3>Login</h3>
<PageTitle>Login</PageTitle>



<EditForm Model="@servidor" OnSubmit="@PainelServidor">
    <div class="form-goup">
        <label for="matricula" class="sr-only">Matricula:</label>
        <InputText id="matricula" class="form-control" placeholder="Apenas numeros" @bind-Value="servidor.Matricula" required />
    </div>
    <div class="form-group">
        <label for="password" class="sr-only">Senha:</label>
        <InputText type="password" class="form-control" id="password" @bind-Value="servidor.Password" required></InputText>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Efetuar Login</button>
        <button type="reset" class="btn btn-outline-primary">Limpar</button>
        <button @onclick="EfetuarCadastro" class="btn btn-outline-dark">Não Possui uma conta? Cadastre-se</button>
    </div>
</EditForm>

@code {
    private LoginServidorViewModel servidor = new LoginServidorViewModel();
    [CascadingParameter] public IModalService ModalService { get; set; }

    public async Task PainelServidor()
    {
        if(ChecarSeExisteLetra(servidor.Matricula))
        {
            toast.ShowError("Campo matrícula deve ser apenas números");
            return;
        }
        toast.ShowInfo("Logando Usuário");
        var response = await http.PostAsJsonAsync<LoginServidorViewModel>("login/servidor", servidor);
        if (response.StatusCode == System.Net.HttpStatusCode.OK)
        {
            var token = await response.Content.ReadAsStringAsync();
            await localStorage.SetItemAsync("token", token);
            toast.ShowSuccess("Logado com sucesso");
            http.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", token);
            NavigationManager.NavigateTo("/painel/servidor",true);

        }
        else
        {
            toast.ShowError("Falha no login");
            ModalService.Show<FrontEnd_GAMA.Components.ErrorDialog>("Verifique seus dados e tente novamente");
        }
    }
    public void EfetuarCadastro()
    {
        NavigationManager.NavigateTo("/cadastro/servidor");
    }

    public bool ChecarSeExisteLetra(string input)
    {
        foreach (char c in input)
        {
            if (char.IsLetter(c))
            {
                return true;
            }
        }
        return false;
    }

}
